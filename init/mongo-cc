#!/bin/bash
#
# mongo-cc	This shell script takes care of starting and stopping
#		the mongoDB code coverage web interface
#
# chkconfig: 345 20 80
# description: mongo-cc is the code coverage report interface

### BEGIN INIT INFO
# Provides: ntpd
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Should-Start: $syslog $named 
# Should-Stop: $syslog $named
# Short-Description: start and stop mongo-cc
# Description: mongo-cc is the MongoDB code coverage report application
### END INIT INFO

# Source function library.
. /etc/init.d/functions

NAME=mongo-cc
USER=mongo-cc-ui
DAEMON="python mongo-cc.py"
DAEMON_PATH="/opt/10gen/$USER/current/web/"
LOG_PATH="/var/log/$USER"
LOGFILE=$LOG_PATH/$NAME.log
DAEMONOPTS="--log_file_prefix=$LOGFILE"
PIDFILE=/var/run/$USER/$NAME.pid
LOCKFILE=/var/run/$USER/$NAME.lock

start() {
    [ "$EUID" != "0" ] && exit 4

    # Start daemon.
    echo -n $"Starting $NAME: "
    cd $DAEMON_PATH
    source ../venv/bin/activate
    daemon --user $USER --pidfile $PIDFILE $DAEMON $DAEMONOPTS \& 
    RETVAL=$?
    [ $RETVAL -eq 0 ] && touch $LOCKFILE
    while [ -z $PID ]; do
        if fuser -s $LOGFILE; then
            PID=$(fuser $LOGFILE 2> /dev/null)
        fi
    done
    echo
    echo $PID > $PIDFILE
    return $RETVAL
}

stop() {
    [ "$EUID" != "0" ] && exit 4
    echo -n $"Shutting down $NAME: "
    killproc -p $PIDFILE
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $LOCKFILE
    return $RETVAL
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $PIDFILE
        ;;
    restart|force-reload)
        stop
        start
        ;;
    try-restart|condrestart)
        if status -p $PIDFILE > /dev/null; then
            stop
            start
        fi
        ;;
    reload)
        exit 3
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|try-restart|force-reload}"
        exit 2
esac

